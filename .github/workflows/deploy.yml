name: Deploy PWA to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Validate PWA files
        run: |
          echo "Validating PWA structure..."
          test -f index.html || (echo "❌ Missing index.html" && exit 1)
          test -f manifest.json || (echo "❌ Missing manifest.json" && exit 1)
          test -f service-worker.js || (echo "❌ Missing service-worker.js" && exit 1)
          test -d documents || (echo "❌ Missing documents directory" && exit 1)
          test -d videos || (echo "❌ Missing videos directory" && exit 1)
          echo "✅ PWA structure validation passed"
          
      - name: Validate manifest.json
        run: |
          echo "Validating manifest.json syntax..."
          python -m json.tool manifest.json > /dev/null || (echo "❌ Invalid JSON in manifest.json" && exit 1)
          echo "✅ manifest.json is valid JSON"
          
      - name: Check file sizes
        run: |
          echo "Checking file sizes for optimization..."
          find documents -name "*.pdf" -size +10M -exec echo "⚠️  Large PDF file: {}" \;
          find videos -name "*.mp4" -size +50M -exec echo "⚠️  Large video file: {}" \;
          echo "📊 File size check complete"
          
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  # Lighthouse audit job
  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Wait for deployment
        run: sleep 30
        
      - name: Lighthouse PWA Audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url || format('https://{0}.github.io/{1}', github.repository_owner, github.event.repository.name) }}
          configPath: '.github/lighthouserc.json'
          temporaryPublicStorage: true
          
      - name: Comment Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const results = require('./lhci_reports/manifest.json');
            const summary = results[0].summary;
            const comment = `## 🔍 Lighthouse PWA Audit Results
            
            | Category | Score |
            |----------|-------|
            | Performance | ${Math.round(summary.performance * 100)}/100 |
            | Accessibility | ${Math.round(summary.accessibility * 100)}/100 |
            | Best Practices | ${Math.round(summary['best-practices'] * 100)}/100 |
            | SEO | ${Math.round(summary.seo * 100)}/100 |
            | PWA | ${Math.round(summary.pwa * 100)}/100 |
            
            ${summary.pwa >= 0.9 ? '✅' : '❌'} PWA Requirements
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });